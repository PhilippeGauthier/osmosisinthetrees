/* If you don't want to use the JS in CSS syntax from `tailwind.config.site.js` you can add your own custom CSS here. Use different layers to make sure your CSS either get's purged or not: https://tailwindcss.com/docs/functions-and-directives#layer. CSS in the base layer won't get purged. */

/* @import "./components/text-animation.css"; */

@layer base {
    @font-face {
        font-family: 'badger';
        src: url('@/fonts/badger.otf') format('opentype');
    }
    @font-face {
        font-family: 'tf';
        src: url('@/fonts/tf.otf') format('opentype');
    }
    @font-face {
        font-family: 'TF48-Style1';
        src: url('@/fonts/TF48-Style1.otf') format('opentype');
    }
    @font-face {
        font-family: 'TF48-Style2';
        src: url('@/fonts/TF48-Style2.otf') format('opentype');
    }
    @font-face {
        font-family: 'TF48-Style3';
        src: url('@/fonts/TF48-Style3.otf') format('opentype');
    }
    @font-face {
        font-family: 'TF48-Style4';
        src: url('@/fonts/TF48-Style4.otf') format('opentype');
    }
    button {
        @apply font-mono;
        @apply tracking-normal;
        @apply leading-normal;
    }
    * {
        @apply tracking-wide;
    }
    a {
        @apply cursor-pointer hover:cursor-pointer;
    }
    html.lenis, html.lenis body {
        height: auto;
      }
      body.modal-open .hide-when-modal {
        display: none;
      }
      .lenis.lenis-smooth {
        scroll-behavior: auto !important;
      }
      
      .lenis.lenis-smooth [data-lenis-prevent] {
        overscroll-behavior: contain;
      }
      
      .lenis.lenis-stopped {
        overflow: hidden;
      }
      
      .lenis.lenis-smooth iframe {
        pointer-events: none;
      }
      
      .headroom--not-top .osmo {
        display: none;
      }
      .headroom--top .osmo {
        @apply lg:flex;
      }
    
    /* Reset pointer events and cursor for all interactive elements */
    a, button, [role="button"] {
        pointer-events: auto !important;
        cursor: pointer !important;
    }
    
    /* Ensure parent containers allow pointer events */
    body, main, div {
        pointer-events: auto;
    }
    
    /* Only disable pointer events on specific decorative elements */
    .deco, .deco__item {
        pointer-events: none;
    }
}

@layer components {
    
}

@layer utilities {

}
